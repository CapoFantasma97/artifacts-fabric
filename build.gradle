buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.16.5-2.8.3'
group = 'artifacts'
archivesBaseName = 'Artifacts'

minecraft {
    mappings channel: 'official', version: '1.16.5'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                artifacts {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                artifacts {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            args '--mod', 'artifacts', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            environment 'target', 'fmluserdevdata'
            mods {
                artifacts {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main.resources.srcDirs += 'src/generated/resources'
}

repositories {
    maven {
        name "curios"
        url "https://maven.theillusivec4.top/"
    }

    maven {
        url "https://www.cursemaven.com"
    }

    maven {
        url "https://maven.tterrag.com/"
    }
    maven {
        name "jei"
        url "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url "https://maven.florens.be"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.0.14'

    runtimeOnly fg.deobf("curse.maven:curious-armor-stands-398784:3107245")

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.4.0:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.4.0")

    compileOnly fg.deobf("mezz.jei:jei-1.16.4:7.6.0.62:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.4:7.6.0.62")

    runtimeOnly fg.deobf("be.florens:autoload-forge:1.1.3")

    implementation fg.deobf("be.florens:expandability-forge:2.0.0")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "artifacts",
            "Specification-Vendor": "artifacts",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"artifacts",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}